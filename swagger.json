{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "description": "API for Social Network application",
        "title": "Social Network"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "components": {
        "securitySchemes": {
            "JWT": {
                "in": "header",
                "name": "Authorization",
                "type": "apiKey"
            }
        }
    },
    "paths": {
        "/api/signup": {
            "post": {
                "tags": ["User"],
                "summary": "SignUp",
                "description": "User signUp",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Invalid request body"
                    }
                }
            }
        },
        "/api/signin": {
            "post": {
                "tags": ["User"],
                "summary": "Login",
                "description": "User login to generate token",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Incorrect Credentials"
                    }
                }
            }
        },
        "/api/posts/all": {
            "get": {
                "tags": ["Posts"],
                "summary": "Get All Posts ",
                "description": "Get all published posts from the database and posts of the authenticated user. It allows pagination",
                "security": [{"JWT": {}}],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination (default: 1)",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of posts per page (default: 10)",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Post not Found"
                    }
                }
            }
        },
        "/api/posts/sort/all": {
            "get": {
                "tags": ["Posts"],
                "summary": "Get All Posts Sorted",
                "description": "Get all published posts from the database and posts of the authenticated user. It allows sorting posts based on engagement or date",
                "security": [{"JWT": {}}],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination (default: 1)",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of posts per page (default: 10)",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Post not Found"
                    }
                }
            }
        },
        "/api/posts/{id}": {
            "get": {
                "tags": ["Posts"],
                "summary": "Get Post by ID",
                "description": "Retrieve a single post by its ID.",
                "security": [{"JWT": {}}],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ID of the post to retrieve.",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Post not Found"
                    }
                }
            },
            "delete": {
                "tags": ["Posts"],
                "summary": "Delete Post",
                "description": "Delete a post by ID.",
                "security": [{"JWT": {}}],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ID of the post to delete.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Post deleted successfully"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": ["Posts"],
                "summary": "Update Post",
                "description": "Update a post by ID.",
                "security": [{"JWT": {}}],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ID of the post to update.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "imageUrl": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "caption": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/posts": {
            "get": {
                "tags": ["Posts"],
                "summary": "Get User Posts",
                "description": "Get all posts of the authenticated user.",
                "security": [{"JWT": {}}],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "No posts found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": ["Posts"],
                "summary": "Add Post",
                "description": "Add a new post.",
                "security": [{"JWT": {}}],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "imageUrl": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "caption": {
                                        "type": "string"
                                    }
                                },
                                "required": ["imageUrl", "caption"]
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "status",
                        "description": "Status of the post (e.g., 'published', 'draft')",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/posts/filter": {
            "get": {
                "tags": ["Posts"],
                "summary": "Filter Posts",
                "description": "Filter posts by caption.",
                "security": [{"JWT": {}}],
                "parameters": [
                    {
                        "name": "caption",
                        "in": "query",
                        "description": "Caption to filter posts by.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "No posts found"
                    }
                }
            }
        },
        "/api/comments/{id}": {
            "get": {
                "tags": ["Comments"],
                "summary": "Get Comments",
                "description": "Retrieve comments for a specific post.",
                "security": [{"JWT": {}}],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ID of the post to retrieve comments for.",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "403": {
                        "description": "Restricted Access"
                    }
                }
            },
            "post": {
                "tags": ["Comments"],
                "summary": "Add Comment",
                "description": "Add a new comment to a post.",
                "security": [{"JWT": {}}],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ID of the post to add a comment to.",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "text": {
                                        "type": "string"
                                    }
                                },
                                "required": ["text"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Restricted Access"
                    }
                }
            },
            "delete": {
                "tags": ["Comments"],
                "summary": "Delete Comment",
                "description": "Delete a comment by ID.",
                "security": [{"JWT": {}}],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ID of the comment to delete.",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Comment deleted successfully"
                    },
                    "404": {
                        "description": "Comment not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": ["Comments"],
                "summary": "Update Comment",
                "description": "Update a comment by ID.",
                "security": [{"JWT": {}}],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ID of the comment to update.",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "text": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Comment not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/likes/{postId}": {
            "get": {
                "tags": ["Likes"],
                "summary": "Get Likes",
                "description": "Retrieve likes for a specific post.",
                "security": [{"JWT": {}}],
                "parameters": [
                    {
                        "in": "path",
                        "name": "postId",
                        "required": true,
                        "description": "ID of the post to retrieve likes for.",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "403": {
                        "description": "Restricted Access"
                    }
                }
            }
        },
        "/api/likes/toggle/{postId}": {
            "get": {
                "tags": ["Likes"],
                "summary": "Toggle Like",
                "description": "Toggle like for a specific post.",
                "security": [{"JWT": {}}],
                "parameters": [
                    {
                        "in": "path",
                        "name": "postId",
                        "required": true,
                        "description": "ID of the post to toggle like for.",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "No Likes Found"
                    },
                    "403": {
                        "description": "Restricted Access"
                    }
                }
            }
        }
    }
}
